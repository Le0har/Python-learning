import telebot
from config import token, channel_id
import site_parser
import os
import pickle

bot = telebot.TeleBot(token)

def keyboardMain():
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    articles_name = site_parser.extractArticlesName()       #–∏–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π –∏–∑ –±–∞–∑—ã
    for i in range(10):         #–±–µ—Ä–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–≤—ã—Ö –¥–µ—Å—è—Ç–∏ —Å—Ç–∞—Ç–µ–π
        button= telebot.types.InlineKeyboardButton(text=articles_name[i][0], callback_data=f'article_{i}') 
        keyboard.add(button)
    button_update= telebot.types.InlineKeyboardButton(text='üîÑ  –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π  üîÑ', callback_data='update') 
    keyboard.add(button_update)
    return keyboard

def keyboardMini():
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
    button_return = telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è  –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='return_menu') 
    button_push = telebot.types.InlineKeyboardButton(text='üõú  –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç –Ω–∞ –∫–∞–Ω–µ–ª–µ  üöÄ', callback_data='push_to_channel')
    keyboard.add(button_return, button_push)
    return keyboard

def getArticle(callback, index, chat_id):
    if chat_id == channel_id:
        bot.send_message(chat_id, '‚¨áÔ∏è  –í–Ω–∏–º–∞–Ω–∏–µ, üçã –Ω–æ–≤–∞—è —Å—Ç–∞—Ç—å—è!  ‚¨áÔ∏è')
    articles_whole_text = site_parser.extractArticleWholeText()     #–∏–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—å–∏ –∏–∑ –±–∞–∑—ã
    size_article = len(articles_whole_text[index][0])
    if size_article > 4096:       #–ø–µ—á–∞—Ç–∞–µ–º index —Å—Ç–∞—Ç—å—é –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å—Ç–æ–≤ –µ—Å–ª–∏ –æ–Ω–∞ –æ–≥—Ä–æ–º–Ω–∞—è
        stop_symbol = []
        for paragraph in articles_whole_text[index]:        
            for i in range(len(paragraph) - 1):             #–∏—â–µ–º –∏–Ω–¥–µ–∫—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–±–∞–∑–∞—Ü–µ–≤ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
                if paragraph[i] == '\n' and paragraph[i+1] == '\n':
                    stop_symbol.append(i)
            start_paragraph = 0
            summa_one_step = 0
            for k in range(len(stop_symbol)):               #–ø–µ—á–∞—Ç–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ—Å—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–ª—Å—è –∞–±–∑–∞—Ü–µ–º, –∞ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–ª—Å—è –Ω–∞ –ø–æ–ª—É—Å–ª–æ–≤–µ
                summa_one_step = stop_symbol[k] - start_paragraph
                if summa_one_step < 4096:
                    continue
                else:
                    bot.send_message(chat_id, paragraph[start_paragraph:stop_symbol[k-1]])     #–ø–µ—á–∞—Ç–∞–µ–º –æ—á–µ—Ä–¥–Ω–æ–π –ø–æ—Å—Ç
                    start_paragraph = stop_symbol[k] + 2
                    summa_one_step = 0
            #–ø–µ—á–∞—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç:        
            bot.send_message(chat_id, paragraph[start_paragraph:])
    else:
        bot.send_message(chat_id, articles_whole_text[index][0])

def getPictures(callback, index, chat_id):
    pictures = site_parser.extractArticlePictures()
    picture = pictures[index]
    if picture[0] != None:
        list_binary = pickle.loads(picture[0])
        count_pict = 1
        for i in range(len(list_binary)):
            if not os.path.isdir('media_out'):
                os.mkdir('media_out')
            with open(f'media_out/picture_for_post_{count_pict}.jpg', 'wb') as file:
                file.write(list_binary[i])
            with open(f'media_out/picture_for_post_{count_pict}.jpg', 'rb') as file:
                media_file = file.read()
            bot.send_photo(chat_id, media_file)
            count_pict += 1
        if chat_id != channel_id:
            bot.send_message(chat_id, '‚¨ÜÔ∏è  –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!  ‚¨ÜÔ∏è', reply_markup=keyboardMini()) 
        else:
            bot.send_message(chat_id, '‚¨ÜÔ∏è  –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!  ‚¨ÜÔ∏è')  
    else:
        if chat_id != channel_id:
            bot.send_message(chat_id, '‚¨ÜÔ∏è  –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!  ‚¨ÜÔ∏è', reply_markup=keyboardMini())
        else:
            bot.send_message(chat_id, '‚¨ÜÔ∏è  –°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!  ‚¨ÜÔ∏è')

""" def returnMain(message, callback):      #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    markup = telebot.types.InlineKeyboardMarkup()
    button_return = telebot.types.InlineKeyboardButton(message, callback_data=callback)
    markup.add(button_return)
    return markup """

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!  üìñ  –í—ã–±–µ—Ä–∏ —Å—Ç–∞—Ç—å—é  ‚¨áÔ∏è', reply_markup=keyboardMain())

""" @bot.message_handler(content_types=['text'])
def testAnswer(message):
    answer = '–ê –≤–æ—Ç –∏ –Ø!'
    bot.send_message(channel_id, answer) """    

@bot.callback_query_handler(func=lambda callback: True)
def callbackMessage(callback):
    if 'article_' in callback.data:
        global index 
        index = int(callback.data.split('_')[1])
        getArticle(callback, index, callback.message.chat.id)
        getPictures(callback, index, callback.message.chat.id)

    elif callback.data == 'return_menu':
        bot.send_message(callback.message.chat.id, '‚ñ∂Ô∏è  –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üìñ  –í—ã–±–µ—Ä–∏ —Å—Ç–∞—Ç—å—é  ‚¨áÔ∏è', reply_markup=keyboardMain())

    elif callback.data == 'push_to_channel':
        bot.send_message(callback.message.chat.id, '‚è≥  –ü–æ—Å—Ç —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è...    ‚è≥')
        getArticle(callback, index, channel_id)
        getPictures(callback, index, channel_id)
        bot.send_message(callback.message.chat.id, '‚úÖ  –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω!')
        bot.send_message(callback.message.chat.id, '‚ñ∂Ô∏è  –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üìñ  –í—ã–±–µ—Ä–∏ —Å—Ç–∞—Ç—å—é  ‚¨áÔ∏è', reply_markup=keyboardMain())    

    elif callback.data == 'update':
        bot.send_message(callback.message.chat.id, '‚è≥  –°—Ç–∞—Ç—å–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è...  ‚è≥')
        site_parser.main()
        bot.send_message(callback.message.chat.id, 'üÜï  –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üîÑ  –í—ã–±–µ—Ä–∏ —Å—Ç–∞—Ç—å—é  ‚¨áÔ∏è', reply_markup=keyboardMain())


if __name__ == '__main__':
    bot.polling(non_stop=True)   